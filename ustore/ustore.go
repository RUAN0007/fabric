/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// source: /home/ruanpingcheng/Desktop/gopath/src/ustore/ustore.i

package ustore

/*
#define intgo swig_intgo
typedef void *swig_voidp;

#include <stdint.h>


typedef long long intgo;
typedef unsigned long long uintgo;



typedef struct { char *p; intgo n; } _gostring_;
typedef struct { void* array; intgo len; intgo cap; } _goslice_;


typedef _gostring_ swig_type_1;
typedef _gostring_ swig_type_2;
typedef _gostring_ swig_type_3;
typedef _gostring_ swig_type_4;
typedef _gostring_ swig_type_5;
typedef _gostring_ swig_type_6;
typedef _gostring_ swig_type_7;
typedef _gostring_ swig_type_8;
typedef _gostring_ swig_type_9;
typedef _gostring_ swig_type_10;
typedef _gostring_ swig_type_11;
typedef _gostring_ swig_type_12;
typedef _gostring_ swig_type_13;
typedef _gostring_ swig_type_14;
typedef _gostring_ swig_type_15;
typedef _gostring_ swig_type_16;
typedef _gostring_ swig_type_17;
typedef _gostring_ swig_type_18;
typedef _gostring_ swig_type_19;
typedef _gostring_ swig_type_20;
typedef _gostring_ swig_type_21;
typedef _gostring_ swig_type_22;
typedef _gostring_ swig_type_23;
typedef _gostring_ swig_type_24;
typedef _gostring_ swig_type_25;
typedef _gostring_ swig_type_26;
typedef _gostring_ swig_type_27;
typedef _gostring_ swig_type_28;
typedef long long swig_type_29;
typedef long long swig_type_30;
typedef long long swig_type_31;
typedef long long swig_type_32;
typedef _gostring_ swig_type_33;
typedef _gostring_ swig_type_34;
typedef _gostring_ swig_type_35;
typedef long long swig_type_36;
typedef long long swig_type_37;
typedef long long swig_type_38;
typedef long long swig_type_39;
typedef _gostring_ swig_type_40;
typedef _gostring_ swig_type_41;
typedef _gostring_ swig_type_42;
typedef _gostring_ swig_type_43;
typedef _gostring_ swig_type_44;
typedef _gostring_ swig_type_45;
typedef long long swig_type_46;
typedef _gostring_ swig_type_47;
typedef _gostring_ swig_type_48;
typedef _gostring_ swig_type_49;
typedef _gostring_ swig_type_50;
typedef _gostring_ swig_type_51;
typedef _gostring_ swig_type_52;
typedef _gostring_ swig_type_53;
typedef _gostring_ swig_type_54;
typedef _gostring_ swig_type_55;
typedef _gostring_ swig_type_56;
typedef long long swig_type_57;
typedef _gostring_ swig_type_58;
typedef _gostring_ swig_type_59;
typedef _gostring_ swig_type_60;
typedef long long swig_type_61;
typedef _gostring_ swig_type_62;
typedef _gostring_ swig_type_63;
typedef _gostring_ swig_type_64;
typedef long long swig_type_65;
typedef _gostring_ swig_type_66;
typedef _gostring_ swig_type_67;
typedef _gostring_ swig_type_68;
typedef _gostring_ swig_type_69;
typedef _gostring_ swig_type_70;
typedef _gostring_ swig_type_71;
typedef _gostring_ swig_type_72;
extern void _wrap_Swig_free_ustore_b40e736282a5577d(uintptr_t arg1);
extern uintptr_t _wrap_Swig_malloc_ustore_b40e736282a5577d(swig_intgo arg1);
extern uintptr_t _wrap_Status_OK_ustore_b40e736282a5577d(void);
extern uintptr_t _wrap_Status_NotFound__SWIG_0_ustore_b40e736282a5577d(swig_type_1 arg1, swig_type_2 arg2);
extern uintptr_t _wrap_Status_NotFound__SWIG_1_ustore_b40e736282a5577d(swig_type_3 arg1);
extern uintptr_t _wrap_Status_Corruption__SWIG_0_ustore_b40e736282a5577d(swig_type_4 arg1, swig_type_5 arg2);
extern uintptr_t _wrap_Status_Corruption__SWIG_1_ustore_b40e736282a5577d(swig_type_6 arg1);
extern uintptr_t _wrap_Status_NotSupported__SWIG_0_ustore_b40e736282a5577d(swig_type_7 arg1, swig_type_8 arg2);
extern uintptr_t _wrap_Status_NotSupported__SWIG_1_ustore_b40e736282a5577d(swig_type_9 arg1);
extern uintptr_t _wrap_Status_InvalidArgument__SWIG_0_ustore_b40e736282a5577d(swig_type_10 arg1, swig_type_11 arg2);
extern uintptr_t _wrap_Status_InvalidArgument__SWIG_1_ustore_b40e736282a5577d(swig_type_12 arg1);
extern uintptr_t _wrap_Status_IOError__SWIG_0_ustore_b40e736282a5577d(swig_type_13 arg1, swig_type_14 arg2);
extern uintptr_t _wrap_Status_IOError__SWIG_1_ustore_b40e736282a5577d(swig_type_15 arg1);
extern _Bool _wrap_Status_ok_ustore_b40e736282a5577d(uintptr_t arg1);
extern _Bool _wrap_Status_IsNotFound_ustore_b40e736282a5577d(uintptr_t arg1);
extern _Bool _wrap_Status_IsCorruption_ustore_b40e736282a5577d(uintptr_t arg1);
extern _Bool _wrap_Status_IsNotSupported_ustore_b40e736282a5577d(uintptr_t arg1);
extern _Bool _wrap_Status_IsInvalidArgument_ustore_b40e736282a5577d(uintptr_t arg1);
extern _Bool _wrap_Status_IsIOError_ustore_b40e736282a5577d(uintptr_t arg1);
extern swig_type_16 _wrap_Status_ToString_ustore_b40e736282a5577d(uintptr_t arg1);
extern uintptr_t _wrap_new_Status_ustore_b40e736282a5577d(void);
extern void _wrap_delete_Status_ustore_b40e736282a5577d(uintptr_t arg1);
extern void _wrap_WriteBatch_Put_ustore_b40e736282a5577d(uintptr_t arg1, swig_type_17 arg2, swig_type_18 arg3);
extern void _wrap_WriteBatch_Delete_ustore_b40e736282a5577d(uintptr_t arg1, swig_type_19 arg2);
extern void _wrap_WriteBatch_Clear_ustore_b40e736282a5577d(uintptr_t arg1);
extern uintptr_t _wrap_new_WriteBatch_ustore_b40e736282a5577d(void);
extern void _wrap_delete_WriteBatch_ustore_b40e736282a5577d(uintptr_t arg1);
extern uintptr_t _wrap_new_PairStatusString__SWIG_0_ustore_b40e736282a5577d(void);
extern uintptr_t _wrap_new_PairStatusString__SWIG_1_ustore_b40e736282a5577d(uintptr_t arg1, swig_type_20 arg2);
extern uintptr_t _wrap_new_PairStatusString__SWIG_2_ustore_b40e736282a5577d(uintptr_t arg1);
extern void _wrap_PairStatusString_first_set_ustore_b40e736282a5577d(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_PairStatusString_first_get_ustore_b40e736282a5577d(uintptr_t arg1);
extern void _wrap_PairStatusString_second_set_ustore_b40e736282a5577d(uintptr_t arg1, swig_type_21 arg2);
extern swig_type_22 _wrap_PairStatusString_second_get_ustore_b40e736282a5577d(uintptr_t arg1);
extern void _wrap_delete_PairStatusString_ustore_b40e736282a5577d(uintptr_t arg1);
extern uintptr_t _wrap_new_PairStr__SWIG_0_ustore_b40e736282a5577d(void);
extern uintptr_t _wrap_new_PairStr__SWIG_1_ustore_b40e736282a5577d(swig_type_23 arg1, swig_type_24 arg2);
extern uintptr_t _wrap_new_PairStr__SWIG_2_ustore_b40e736282a5577d(uintptr_t arg1);
extern void _wrap_PairStr_first_set_ustore_b40e736282a5577d(uintptr_t arg1, swig_type_25 arg2);
extern swig_type_26 _wrap_PairStr_first_get_ustore_b40e736282a5577d(uintptr_t arg1);
extern void _wrap_PairStr_second_set_ustore_b40e736282a5577d(uintptr_t arg1, swig_type_27 arg2);
extern swig_type_28 _wrap_PairStr_second_get_ustore_b40e736282a5577d(uintptr_t arg1);
extern void _wrap_delete_PairStr_ustore_b40e736282a5577d(uintptr_t arg1);
extern uintptr_t _wrap_new_VecStr__SWIG_0_ustore_b40e736282a5577d(void);
extern uintptr_t _wrap_new_VecStr__SWIG_1_ustore_b40e736282a5577d(swig_type_29 arg1);
extern swig_type_30 _wrap_VecStr_size_ustore_b40e736282a5577d(uintptr_t arg1);
extern swig_type_31 _wrap_VecStr_capacity_ustore_b40e736282a5577d(uintptr_t arg1);
extern void _wrap_VecStr_reserve_ustore_b40e736282a5577d(uintptr_t arg1, swig_type_32 arg2);
extern _Bool _wrap_VecStr_isEmpty_ustore_b40e736282a5577d(uintptr_t arg1);
extern void _wrap_VecStr_clear_ustore_b40e736282a5577d(uintptr_t arg1);
extern void _wrap_VecStr_add_ustore_b40e736282a5577d(uintptr_t arg1, swig_type_33 arg2);
extern swig_type_34 _wrap_VecStr_get_ustore_b40e736282a5577d(uintptr_t arg1, swig_intgo arg2);
extern void _wrap_VecStr_set_ustore_b40e736282a5577d(uintptr_t arg1, swig_intgo arg2, swig_type_35 arg3);
extern void _wrap_delete_VecStr_ustore_b40e736282a5577d(uintptr_t arg1);
extern uintptr_t _wrap_new_VectorPairStr__SWIG_0_ustore_b40e736282a5577d(void);
extern uintptr_t _wrap_new_VectorPairStr__SWIG_1_ustore_b40e736282a5577d(swig_type_36 arg1);
extern swig_type_37 _wrap_VectorPairStr_size_ustore_b40e736282a5577d(uintptr_t arg1);
extern swig_type_38 _wrap_VectorPairStr_capacity_ustore_b40e736282a5577d(uintptr_t arg1);
extern void _wrap_VectorPairStr_reserve_ustore_b40e736282a5577d(uintptr_t arg1, swig_type_39 arg2);
extern _Bool _wrap_VectorPairStr_isEmpty_ustore_b40e736282a5577d(uintptr_t arg1);
extern void _wrap_VectorPairStr_clear_ustore_b40e736282a5577d(uintptr_t arg1);
extern void _wrap_VectorPairStr_add_ustore_b40e736282a5577d(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_VectorPairStr_get_ustore_b40e736282a5577d(uintptr_t arg1, swig_intgo arg2);
extern void _wrap_VectorPairStr_set_ustore_b40e736282a5577d(uintptr_t arg1, swig_intgo arg2, uintptr_t arg3);
extern void _wrap_delete_VectorPairStr_ustore_b40e736282a5577d(uintptr_t arg1);
extern uintptr_t _wrap_new_PairStatusVectorPairStr__SWIG_0_ustore_b40e736282a5577d(void);
extern uintptr_t _wrap_new_PairStatusVectorPairStr__SWIG_1_ustore_b40e736282a5577d(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_new_PairStatusVectorPairStr__SWIG_2_ustore_b40e736282a5577d(uintptr_t arg1);
extern void _wrap_PairStatusVectorPairStr_first_set_ustore_b40e736282a5577d(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_PairStatusVectorPairStr_first_get_ustore_b40e736282a5577d(uintptr_t arg1);
extern void _wrap_PairStatusVectorPairStr_second_set_ustore_b40e736282a5577d(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_PairStatusVectorPairStr_second_get_ustore_b40e736282a5577d(uintptr_t arg1);
extern void _wrap_delete_PairStatusVectorPairStr_ustore_b40e736282a5577d(uintptr_t arg1);
extern uintptr_t _wrap_new_KVDB__SWIG_0_ustore_b40e736282a5577d(swig_intgo arg1, swig_type_40 arg2);
extern uintptr_t _wrap_new_KVDB__SWIG_1_ustore_b40e736282a5577d(swig_intgo arg1);
extern uintptr_t _wrap_new_KVDB__SWIG_2_ustore_b40e736282a5577d(void);
extern uintptr_t _wrap_KVDB_Get_ustore_b40e736282a5577d(uintptr_t arg1, swig_type_41 arg2);
extern uintptr_t _wrap_KVDB_Put_ustore_b40e736282a5577d(uintptr_t arg1, swig_type_42 arg2, swig_type_43 arg3);
extern uintptr_t _wrap_KVDB_Delete_ustore_b40e736282a5577d(uintptr_t arg1, swig_type_44 arg2);
extern uintptr_t _wrap_KVDB_Write_ustore_b40e736282a5577d(uintptr_t arg1, uintptr_t arg2);
extern _Bool _wrap_KVDB_Exist_ustore_b40e736282a5577d(uintptr_t arg1, swig_type_45 arg2);
extern uintptr_t _wrap_KVDB_NewIterator_ustore_b40e736282a5577d(uintptr_t arg1);
extern swig_type_46 _wrap_KVDB_GetSize_ustore_b40e736282a5577d(uintptr_t arg1);
extern swig_type_47 _wrap_KVDB_GetCFName_ustore_b40e736282a5577d(uintptr_t arg1);
extern uintptr_t _wrap_KVDB_InitGlobalState_ustore_b40e736282a5577d(uintptr_t arg1);
extern uintptr_t _wrap_KVDB_Commit_ustore_b40e736282a5577d(uintptr_t arg1);
extern uintptr_t _wrap_KVDB_GetState_ustore_b40e736282a5577d(uintptr_t arg1, swig_type_48 arg2);
extern _Bool _wrap_KVDB_PutState_ustore_b40e736282a5577d(uintptr_t arg1, swig_type_49 arg2, swig_type_50 arg3, swig_type_51 arg4, uintptr_t arg5);
extern uintptr_t _wrap_KVDB_GetBlock_ustore_b40e736282a5577d(uintptr_t arg1, swig_type_52 arg2, swig_type_53 arg3);
extern uintptr_t _wrap_KVDB_PutBlock_ustore_b40e736282a5577d(uintptr_t arg1, swig_type_54 arg2, swig_type_55 arg3);
extern uintptr_t _wrap_KVDB_GetHistoricalState__SWIG_0_ustore_b40e736282a5577d(uintptr_t arg1, swig_type_56 arg2, swig_type_57 arg3);
extern uintptr_t _wrap_KVDB_GetHistoricalState__SWIG_1_ustore_b40e736282a5577d(uintptr_t arg1, swig_type_58 arg2, swig_type_59 arg3);
extern uintptr_t _wrap_KVDB_GetTxnID__SWIG_0_ustore_b40e736282a5577d(uintptr_t arg1, swig_type_60 arg2, swig_type_61 arg3);
extern uintptr_t _wrap_KVDB_GetTxnID__SWIG_1_ustore_b40e736282a5577d(uintptr_t arg1, swig_type_62 arg2, swig_type_63 arg3);
extern uintptr_t _wrap_KVDB_GetDeps__SWIG_0_ustore_b40e736282a5577d(uintptr_t arg1, swig_type_64 arg2, swig_type_65 arg3);
extern uintptr_t _wrap_KVDB_GetDeps__SWIG_1_ustore_b40e736282a5577d(uintptr_t arg1, swig_type_66 arg2, swig_type_67 arg3);
extern void _wrap_delete_KVDB_ustore_b40e736282a5577d(uintptr_t arg1);
extern void _wrap_delete_Iterator_ustore_b40e736282a5577d(uintptr_t arg1);
extern swig_intgo _wrap_Iterator_GetTime_ustore_b40e736282a5577d(uintptr_t arg1);
extern void _wrap_Iterator_Release_ustore_b40e736282a5577d(uintptr_t arg1);
extern void _wrap_Iterator_SetRange_ustore_b40e736282a5577d(uintptr_t arg1, swig_type_68 arg2, swig_type_69 arg3);
extern _Bool _wrap_Iterator_Valid_ustore_b40e736282a5577d(uintptr_t arg1);
extern void _wrap_Iterator_SeekToFirst_ustore_b40e736282a5577d(uintptr_t arg1);
extern void _wrap_Iterator_SeekToLast_ustore_b40e736282a5577d(uintptr_t arg1);
extern void _wrap_Iterator_Seek_ustore_b40e736282a5577d(uintptr_t arg1, swig_type_70 arg2);
extern _Bool _wrap_Iterator_Next_ustore_b40e736282a5577d(uintptr_t arg1);
extern _Bool _wrap_Iterator_Prev_ustore_b40e736282a5577d(uintptr_t arg1);
extern swig_type_71 _wrap_Iterator_key_ustore_b40e736282a5577d(uintptr_t arg1);
extern swig_type_72 _wrap_Iterator_value_ustore_b40e736282a5577d(uintptr_t arg1);
extern uintptr_t _wrap_NewEmptyIterator_ustore_b40e736282a5577d(void);
#undef intgo
*/
import "C"

import "unsafe"
import _ "runtime/cgo"
import "sync"


type _ unsafe.Pointer



var Swig_escape_always_false bool
var Swig_escape_val interface{}


type _swig_fnptr *byte
type _swig_memberptr *byte


type _ sync.Mutex


type swig_gostring struct { p uintptr; n int }
func swigCopyString(s string) string {
  p := *(*swig_gostring)(unsafe.Pointer(&s))
  r := string((*[0x7fffffff]byte)(unsafe.Pointer(p.p))[:p.n])
  Swig_free(p.p)
  return r
}

func Swig_free(arg1 uintptr) {
	_swig_i_0 := arg1
	C._wrap_Swig_free_ustore_b40e736282a5577d(C.uintptr_t(_swig_i_0))
}

func Swig_malloc(arg1 int) (_swig_ret uintptr) {
	var swig_r uintptr
	_swig_i_0 := arg1
	swig_r = (uintptr)(C._wrap_Swig_malloc_ustore_b40e736282a5577d(C.swig_intgo(_swig_i_0)))
	return swig_r
}

type SwigcptrStatus uintptr

func (p SwigcptrStatus) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrStatus) SwigIsStatus() {
}

func StatusOK() (_swig_ret Status) {
	var swig_r Status
	swig_r = (Status)(SwigcptrStatus(C._wrap_Status_OK_ustore_b40e736282a5577d()))
	return swig_r
}

func StatusNotFound__SWIG_0(arg1 string, arg2 string) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (Status)(SwigcptrStatus(C._wrap_Status_NotFound__SWIG_0_ustore_b40e736282a5577d(*(*C.swig_type_1)(unsafe.Pointer(&_swig_i_0)), *(*C.swig_type_2)(unsafe.Pointer(&_swig_i_1)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func StatusNotFound__SWIG_1(arg1 string) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1
	swig_r = (Status)(SwigcptrStatus(C._wrap_Status_NotFound__SWIG_1_ustore_b40e736282a5577d(*(*C.swig_type_3)(unsafe.Pointer(&_swig_i_0)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func StatusNotFound(a ...interface{}) Status {
	argc := len(a)
	if argc == 1 {
		return StatusNotFound__SWIG_1(a[0].(string))
	}
	if argc == 2 {
		return StatusNotFound__SWIG_0(a[0].(string), a[1].(string))
	}
	panic("No match for overloaded function call")
}

func StatusCorruption__SWIG_0(arg1 string, arg2 string) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (Status)(SwigcptrStatus(C._wrap_Status_Corruption__SWIG_0_ustore_b40e736282a5577d(*(*C.swig_type_4)(unsafe.Pointer(&_swig_i_0)), *(*C.swig_type_5)(unsafe.Pointer(&_swig_i_1)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func StatusCorruption__SWIG_1(arg1 string) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1
	swig_r = (Status)(SwigcptrStatus(C._wrap_Status_Corruption__SWIG_1_ustore_b40e736282a5577d(*(*C.swig_type_6)(unsafe.Pointer(&_swig_i_0)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func StatusCorruption(a ...interface{}) Status {
	argc := len(a)
	if argc == 1 {
		return StatusCorruption__SWIG_1(a[0].(string))
	}
	if argc == 2 {
		return StatusCorruption__SWIG_0(a[0].(string), a[1].(string))
	}
	panic("No match for overloaded function call")
}

func StatusNotSupported__SWIG_0(arg1 string, arg2 string) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (Status)(SwigcptrStatus(C._wrap_Status_NotSupported__SWIG_0_ustore_b40e736282a5577d(*(*C.swig_type_7)(unsafe.Pointer(&_swig_i_0)), *(*C.swig_type_8)(unsafe.Pointer(&_swig_i_1)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func StatusNotSupported__SWIG_1(arg1 string) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1
	swig_r = (Status)(SwigcptrStatus(C._wrap_Status_NotSupported__SWIG_1_ustore_b40e736282a5577d(*(*C.swig_type_9)(unsafe.Pointer(&_swig_i_0)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func StatusNotSupported(a ...interface{}) Status {
	argc := len(a)
	if argc == 1 {
		return StatusNotSupported__SWIG_1(a[0].(string))
	}
	if argc == 2 {
		return StatusNotSupported__SWIG_0(a[0].(string), a[1].(string))
	}
	panic("No match for overloaded function call")
}

func StatusInvalidArgument__SWIG_0(arg1 string, arg2 string) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (Status)(SwigcptrStatus(C._wrap_Status_InvalidArgument__SWIG_0_ustore_b40e736282a5577d(*(*C.swig_type_10)(unsafe.Pointer(&_swig_i_0)), *(*C.swig_type_11)(unsafe.Pointer(&_swig_i_1)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func StatusInvalidArgument__SWIG_1(arg1 string) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1
	swig_r = (Status)(SwigcptrStatus(C._wrap_Status_InvalidArgument__SWIG_1_ustore_b40e736282a5577d(*(*C.swig_type_12)(unsafe.Pointer(&_swig_i_0)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func StatusInvalidArgument(a ...interface{}) Status {
	argc := len(a)
	if argc == 1 {
		return StatusInvalidArgument__SWIG_1(a[0].(string))
	}
	if argc == 2 {
		return StatusInvalidArgument__SWIG_0(a[0].(string), a[1].(string))
	}
	panic("No match for overloaded function call")
}

func StatusIOError__SWIG_0(arg1 string, arg2 string) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (Status)(SwigcptrStatus(C._wrap_Status_IOError__SWIG_0_ustore_b40e736282a5577d(*(*C.swig_type_13)(unsafe.Pointer(&_swig_i_0)), *(*C.swig_type_14)(unsafe.Pointer(&_swig_i_1)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func StatusIOError__SWIG_1(arg1 string) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1
	swig_r = (Status)(SwigcptrStatus(C._wrap_Status_IOError__SWIG_1_ustore_b40e736282a5577d(*(*C.swig_type_15)(unsafe.Pointer(&_swig_i_0)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func StatusIOError(a ...interface{}) Status {
	argc := len(a)
	if argc == 1 {
		return StatusIOError__SWIG_1(a[0].(string))
	}
	if argc == 2 {
		return StatusIOError__SWIG_0(a[0].(string), a[1].(string))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrStatus) Ok() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_Status_ok_ustore_b40e736282a5577d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrStatus) IsNotFound() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_Status_IsNotFound_ustore_b40e736282a5577d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrStatus) IsCorruption() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_Status_IsCorruption_ustore_b40e736282a5577d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrStatus) IsNotSupported() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_Status_IsNotSupported_ustore_b40e736282a5577d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrStatus) IsInvalidArgument() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_Status_IsInvalidArgument_ustore_b40e736282a5577d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrStatus) IsIOError() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_Status_IsIOError_ustore_b40e736282a5577d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrStatus) ToString() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_Status_ToString_ustore_b40e736282a5577d(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func NewStatus() (_swig_ret Status) {
	var swig_r Status
	swig_r = (Status)(SwigcptrStatus(C._wrap_new_Status_ustore_b40e736282a5577d()))
	return swig_r
}

func DeleteStatus(arg1 Status) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_Status_ustore_b40e736282a5577d(C.uintptr_t(_swig_i_0))
}

type Status interface {
	Swigcptr() uintptr
	SwigIsStatus()
	Ok() (_swig_ret bool)
	IsNotFound() (_swig_ret bool)
	IsCorruption() (_swig_ret bool)
	IsNotSupported() (_swig_ret bool)
	IsInvalidArgument() (_swig_ret bool)
	IsIOError() (_swig_ret bool)
	ToString() (_swig_ret string)
}

type SwigcptrWriteBatch uintptr

func (p SwigcptrWriteBatch) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrWriteBatch) SwigIsWriteBatch() {
}

func (arg1 SwigcptrWriteBatch) Put(arg2 string, arg3 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_WriteBatch_Put_ustore_b40e736282a5577d(C.uintptr_t(_swig_i_0), *(*C.swig_type_17)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_18)(unsafe.Pointer(&_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
}

func (arg1 SwigcptrWriteBatch) Delete(arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_WriteBatch_Delete_ustore_b40e736282a5577d(C.uintptr_t(_swig_i_0), *(*C.swig_type_19)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrWriteBatch) Clear() {
	_swig_i_0 := arg1
	C._wrap_WriteBatch_Clear_ustore_b40e736282a5577d(C.uintptr_t(_swig_i_0))
}

func NewWriteBatch() (_swig_ret WriteBatch) {
	var swig_r WriteBatch
	swig_r = (WriteBatch)(SwigcptrWriteBatch(C._wrap_new_WriteBatch_ustore_b40e736282a5577d()))
	return swig_r
}

func DeleteWriteBatch(arg1 WriteBatch) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_WriteBatch_ustore_b40e736282a5577d(C.uintptr_t(_swig_i_0))
}

type WriteBatch interface {
	Swigcptr() uintptr
	SwigIsWriteBatch()
	Put(arg2 string, arg3 string)
	Delete(arg2 string)
	Clear()
}

type SwigcptrPairStatusString uintptr

func (p SwigcptrPairStatusString) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrPairStatusString) SwigIsPairStatusString() {
}

func NewPairStatusString__SWIG_0() (_swig_ret PairStatusString) {
	var swig_r PairStatusString
	swig_r = (PairStatusString)(SwigcptrPairStatusString(C._wrap_new_PairStatusString__SWIG_0_ustore_b40e736282a5577d()))
	return swig_r
}

func NewPairStatusString__SWIG_1(arg1 Status, arg2 string) (_swig_ret PairStatusString) {
	var swig_r PairStatusString
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2
	swig_r = (PairStatusString)(SwigcptrPairStatusString(C._wrap_new_PairStatusString__SWIG_1_ustore_b40e736282a5577d(C.uintptr_t(_swig_i_0), *(*C.swig_type_20)(unsafe.Pointer(&_swig_i_1)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func NewPairStatusString__SWIG_2(arg1 PairStatusString) (_swig_ret PairStatusString) {
	var swig_r PairStatusString
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (PairStatusString)(SwigcptrPairStatusString(C._wrap_new_PairStatusString__SWIG_2_ustore_b40e736282a5577d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewPairStatusString(a ...interface{}) PairStatusString {
	argc := len(a)
	if argc == 0 {
		return NewPairStatusString__SWIG_0()
	}
	if argc == 1 {
		return NewPairStatusString__SWIG_2(a[0].(PairStatusString))
	}
	if argc == 2 {
		return NewPairStatusString__SWIG_1(a[0].(Status), a[1].(string))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrPairStatusString) SetFirst(arg2 Status) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_PairStatusString_first_set_ustore_b40e736282a5577d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrPairStatusString) GetFirst() (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1
	swig_r = (Status)(SwigcptrStatus(C._wrap_PairStatusString_first_get_ustore_b40e736282a5577d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrPairStatusString) SetSecond(arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_PairStatusString_second_set_ustore_b40e736282a5577d(C.uintptr_t(_swig_i_0), *(*C.swig_type_21)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrPairStatusString) GetSecond() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_PairStatusString_second_get_ustore_b40e736282a5577d(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func DeletePairStatusString(arg1 PairStatusString) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_PairStatusString_ustore_b40e736282a5577d(C.uintptr_t(_swig_i_0))
}

type PairStatusString interface {
	Swigcptr() uintptr
	SwigIsPairStatusString()
	SetFirst(arg2 Status)
	GetFirst() (_swig_ret Status)
	SetSecond(arg2 string)
	GetSecond() (_swig_ret string)
}

type SwigcptrPairStr uintptr

func (p SwigcptrPairStr) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrPairStr) SwigIsPairStr() {
}

func NewPairStr__SWIG_0() (_swig_ret PairStr) {
	var swig_r PairStr
	swig_r = (PairStr)(SwigcptrPairStr(C._wrap_new_PairStr__SWIG_0_ustore_b40e736282a5577d()))
	return swig_r
}

func NewPairStr__SWIG_1(arg1 string, arg2 string) (_swig_ret PairStr) {
	var swig_r PairStr
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (PairStr)(SwigcptrPairStr(C._wrap_new_PairStr__SWIG_1_ustore_b40e736282a5577d(*(*C.swig_type_23)(unsafe.Pointer(&_swig_i_0)), *(*C.swig_type_24)(unsafe.Pointer(&_swig_i_1)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func NewPairStr__SWIG_2(arg1 PairStr) (_swig_ret PairStr) {
	var swig_r PairStr
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (PairStr)(SwigcptrPairStr(C._wrap_new_PairStr__SWIG_2_ustore_b40e736282a5577d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewPairStr(a ...interface{}) PairStr {
	argc := len(a)
	if argc == 0 {
		return NewPairStr__SWIG_0()
	}
	if argc == 1 {
		return NewPairStr__SWIG_2(a[0].(PairStr))
	}
	if argc == 2 {
		return NewPairStr__SWIG_1(a[0].(string), a[1].(string))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrPairStr) SetFirst(arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_PairStr_first_set_ustore_b40e736282a5577d(C.uintptr_t(_swig_i_0), *(*C.swig_type_25)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrPairStr) GetFirst() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_PairStr_first_get_ustore_b40e736282a5577d(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (arg1 SwigcptrPairStr) SetSecond(arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_PairStr_second_set_ustore_b40e736282a5577d(C.uintptr_t(_swig_i_0), *(*C.swig_type_27)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrPairStr) GetSecond() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_PairStr_second_get_ustore_b40e736282a5577d(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func DeletePairStr(arg1 PairStr) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_PairStr_ustore_b40e736282a5577d(C.uintptr_t(_swig_i_0))
}

type PairStr interface {
	Swigcptr() uintptr
	SwigIsPairStr()
	SetFirst(arg2 string)
	GetFirst() (_swig_ret string)
	SetSecond(arg2 string)
	GetSecond() (_swig_ret string)
}

type SwigcptrVecStr uintptr

func (p SwigcptrVecStr) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrVecStr) SwigIsVecStr() {
}

func NewVecStr__SWIG_0() (_swig_ret VecStr) {
	var swig_r VecStr
	swig_r = (VecStr)(SwigcptrVecStr(C._wrap_new_VecStr__SWIG_0_ustore_b40e736282a5577d()))
	return swig_r
}

func NewVecStr__SWIG_1(arg1 int64) (_swig_ret VecStr) {
	var swig_r VecStr
	_swig_i_0 := arg1
	swig_r = (VecStr)(SwigcptrVecStr(C._wrap_new_VecStr__SWIG_1_ustore_b40e736282a5577d(C.swig_type_29(_swig_i_0))))
	return swig_r
}

func NewVecStr(a ...interface{}) VecStr {
	argc := len(a)
	if argc == 0 {
		return NewVecStr__SWIG_0()
	}
	if argc == 1 {
		return NewVecStr__SWIG_1(a[0].(int64))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrVecStr) Size() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_VecStr_size_ustore_b40e736282a5577d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrVecStr) Capacity() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_VecStr_capacity_ustore_b40e736282a5577d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrVecStr) Reserve(arg2 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_VecStr_reserve_ustore_b40e736282a5577d(C.uintptr_t(_swig_i_0), C.swig_type_32(_swig_i_1))
}

func (arg1 SwigcptrVecStr) IsEmpty() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_VecStr_isEmpty_ustore_b40e736282a5577d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrVecStr) Clear() {
	_swig_i_0 := arg1
	C._wrap_VecStr_clear_ustore_b40e736282a5577d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrVecStr) Add(arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_VecStr_add_ustore_b40e736282a5577d(C.uintptr_t(_swig_i_0), *(*C.swig_type_33)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrVecStr) Get(arg2 int) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r_p := C._wrap_VecStr_get_ustore_b40e736282a5577d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (arg1 SwigcptrVecStr) Set(arg2 int, arg3 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_VecStr_set_ustore_b40e736282a5577d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), *(*C.swig_type_35)(unsafe.Pointer(&_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
}

func DeleteVecStr(arg1 VecStr) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_VecStr_ustore_b40e736282a5577d(C.uintptr_t(_swig_i_0))
}

type VecStr interface {
	Swigcptr() uintptr
	SwigIsVecStr()
	Size() (_swig_ret int64)
	Capacity() (_swig_ret int64)
	Reserve(arg2 int64)
	IsEmpty() (_swig_ret bool)
	Clear()
	Add(arg2 string)
	Get(arg2 int) (_swig_ret string)
	Set(arg2 int, arg3 string)
}

type SwigcptrVectorPairStr uintptr

func (p SwigcptrVectorPairStr) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrVectorPairStr) SwigIsVectorPairStr() {
}

func NewVectorPairStr__SWIG_0() (_swig_ret VectorPairStr) {
	var swig_r VectorPairStr
	swig_r = (VectorPairStr)(SwigcptrVectorPairStr(C._wrap_new_VectorPairStr__SWIG_0_ustore_b40e736282a5577d()))
	return swig_r
}

func NewVectorPairStr__SWIG_1(arg1 int64) (_swig_ret VectorPairStr) {
	var swig_r VectorPairStr
	_swig_i_0 := arg1
	swig_r = (VectorPairStr)(SwigcptrVectorPairStr(C._wrap_new_VectorPairStr__SWIG_1_ustore_b40e736282a5577d(C.swig_type_36(_swig_i_0))))
	return swig_r
}

func NewVectorPairStr(a ...interface{}) VectorPairStr {
	argc := len(a)
	if argc == 0 {
		return NewVectorPairStr__SWIG_0()
	}
	if argc == 1 {
		return NewVectorPairStr__SWIG_1(a[0].(int64))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrVectorPairStr) Size() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_VectorPairStr_size_ustore_b40e736282a5577d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrVectorPairStr) Capacity() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_VectorPairStr_capacity_ustore_b40e736282a5577d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrVectorPairStr) Reserve(arg2 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_VectorPairStr_reserve_ustore_b40e736282a5577d(C.uintptr_t(_swig_i_0), C.swig_type_39(_swig_i_1))
}

func (arg1 SwigcptrVectorPairStr) IsEmpty() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_VectorPairStr_isEmpty_ustore_b40e736282a5577d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrVectorPairStr) Clear() {
	_swig_i_0 := arg1
	C._wrap_VectorPairStr_clear_ustore_b40e736282a5577d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrVectorPairStr) Add(arg2 PairStr) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_VectorPairStr_add_ustore_b40e736282a5577d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrVectorPairStr) Get(arg2 int) (_swig_ret PairStr) {
	var swig_r PairStr
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (PairStr)(SwigcptrPairStr(C._wrap_VectorPairStr_get_ustore_b40e736282a5577d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrVectorPairStr) Set(arg2 int, arg3 PairStr) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3.Swigcptr()
	C._wrap_VectorPairStr_set_ustore_b40e736282a5577d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.uintptr_t(_swig_i_2))
}

func DeleteVectorPairStr(arg1 VectorPairStr) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_VectorPairStr_ustore_b40e736282a5577d(C.uintptr_t(_swig_i_0))
}

type VectorPairStr interface {
	Swigcptr() uintptr
	SwigIsVectorPairStr()
	Size() (_swig_ret int64)
	Capacity() (_swig_ret int64)
	Reserve(arg2 int64)
	IsEmpty() (_swig_ret bool)
	Clear()
	Add(arg2 PairStr)
	Get(arg2 int) (_swig_ret PairStr)
	Set(arg2 int, arg3 PairStr)
}

type SwigcptrPairStatusVectorPairStr uintptr

func (p SwigcptrPairStatusVectorPairStr) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrPairStatusVectorPairStr) SwigIsPairStatusVectorPairStr() {
}

func NewPairStatusVectorPairStr__SWIG_0() (_swig_ret PairStatusVectorPairStr) {
	var swig_r PairStatusVectorPairStr
	swig_r = (PairStatusVectorPairStr)(SwigcptrPairStatusVectorPairStr(C._wrap_new_PairStatusVectorPairStr__SWIG_0_ustore_b40e736282a5577d()))
	return swig_r
}

func NewPairStatusVectorPairStr__SWIG_1(arg1 Status, arg2 VectorPairStr) (_swig_ret PairStatusVectorPairStr) {
	var swig_r PairStatusVectorPairStr
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (PairStatusVectorPairStr)(SwigcptrPairStatusVectorPairStr(C._wrap_new_PairStatusVectorPairStr__SWIG_1_ustore_b40e736282a5577d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func NewPairStatusVectorPairStr__SWIG_2(arg1 PairStatusVectorPairStr) (_swig_ret PairStatusVectorPairStr) {
	var swig_r PairStatusVectorPairStr
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (PairStatusVectorPairStr)(SwigcptrPairStatusVectorPairStr(C._wrap_new_PairStatusVectorPairStr__SWIG_2_ustore_b40e736282a5577d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewPairStatusVectorPairStr(a ...interface{}) PairStatusVectorPairStr {
	argc := len(a)
	if argc == 0 {
		return NewPairStatusVectorPairStr__SWIG_0()
	}
	if argc == 1 {
		return NewPairStatusVectorPairStr__SWIG_2(a[0].(PairStatusVectorPairStr))
	}
	if argc == 2 {
		return NewPairStatusVectorPairStr__SWIG_1(a[0].(Status), a[1].(VectorPairStr))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrPairStatusVectorPairStr) SetFirst(arg2 Status) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_PairStatusVectorPairStr_first_set_ustore_b40e736282a5577d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrPairStatusVectorPairStr) GetFirst() (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1
	swig_r = (Status)(SwigcptrStatus(C._wrap_PairStatusVectorPairStr_first_get_ustore_b40e736282a5577d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrPairStatusVectorPairStr) SetSecond(arg2 VectorPairStr) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_PairStatusVectorPairStr_second_set_ustore_b40e736282a5577d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrPairStatusVectorPairStr) GetSecond() (_swig_ret VectorPairStr) {
	var swig_r VectorPairStr
	_swig_i_0 := arg1
	swig_r = (VectorPairStr)(SwigcptrVectorPairStr(C._wrap_PairStatusVectorPairStr_second_get_ustore_b40e736282a5577d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func DeletePairStatusVectorPairStr(arg1 PairStatusVectorPairStr) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_PairStatusVectorPairStr_ustore_b40e736282a5577d(C.uintptr_t(_swig_i_0))
}

type PairStatusVectorPairStr interface {
	Swigcptr() uintptr
	SwigIsPairStatusVectorPairStr()
	SetFirst(arg2 Status)
	GetFirst() (_swig_ret Status)
	SetSecond(arg2 VectorPairStr)
	GetSecond() (_swig_ret VectorPairStr)
}

type SwigcptrKVDB uintptr

func (p SwigcptrKVDB) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrKVDB) SwigIsKVDB() {
}

func NewKVDB__SWIG_0(arg1 uint, arg2 string) (_swig_ret KVDB) {
	var swig_r KVDB
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (KVDB)(SwigcptrKVDB(C._wrap_new_KVDB__SWIG_0_ustore_b40e736282a5577d(C.swig_intgo(_swig_i_0), *(*C.swig_type_40)(unsafe.Pointer(&_swig_i_1)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func NewKVDB__SWIG_1(arg1 uint) (_swig_ret KVDB) {
	var swig_r KVDB
	_swig_i_0 := arg1
	swig_r = (KVDB)(SwigcptrKVDB(C._wrap_new_KVDB__SWIG_1_ustore_b40e736282a5577d(C.swig_intgo(_swig_i_0))))
	return swig_r
}

func NewKVDB__SWIG_2() (_swig_ret KVDB) {
	var swig_r KVDB
	swig_r = (KVDB)(SwigcptrKVDB(C._wrap_new_KVDB__SWIG_2_ustore_b40e736282a5577d()))
	return swig_r
}

func NewKVDB(a ...interface{}) KVDB {
	argc := len(a)
	if argc == 0 {
		return NewKVDB__SWIG_2()
	}
	if argc == 1 {
		return NewKVDB__SWIG_1(a[0].(uint))
	}
	if argc == 2 {
		return NewKVDB__SWIG_0(a[0].(uint), a[1].(string))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrKVDB) Get(arg2 string) (_swig_ret PairStatusString) {
	var swig_r PairStatusString
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (PairStatusString)(SwigcptrPairStatusString(C._wrap_KVDB_Get_ustore_b40e736282a5577d(C.uintptr_t(_swig_i_0), *(*C.swig_type_41)(unsafe.Pointer(&_swig_i_1)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func (arg1 SwigcptrKVDB) Put(arg2 string, arg3 string) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (Status)(SwigcptrStatus(C._wrap_KVDB_Put_ustore_b40e736282a5577d(C.uintptr_t(_swig_i_0), *(*C.swig_type_42)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_43)(unsafe.Pointer(&_swig_i_2)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	return swig_r
}

func (arg1 SwigcptrKVDB) Delete(arg2 string) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (Status)(SwigcptrStatus(C._wrap_KVDB_Delete_ustore_b40e736282a5577d(C.uintptr_t(_swig_i_0), *(*C.swig_type_44)(unsafe.Pointer(&_swig_i_1)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func (arg1 SwigcptrKVDB) Write(arg2 WriteBatch) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (Status)(SwigcptrStatus(C._wrap_KVDB_Write_ustore_b40e736282a5577d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrKVDB) Exist(arg2 string) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (bool)(C._wrap_KVDB_Exist_ustore_b40e736282a5577d(C.uintptr_t(_swig_i_0), *(*C.swig_type_45)(unsafe.Pointer(&_swig_i_1))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func (arg1 SwigcptrKVDB) NewIterator() (_swig_ret Iterator) {
	var swig_r Iterator
	_swig_i_0 := arg1
	swig_r = (Iterator)(SwigcptrIterator(C._wrap_KVDB_NewIterator_ustore_b40e736282a5577d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrKVDB) GetSize() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_KVDB_GetSize_ustore_b40e736282a5577d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrKVDB) GetCFName() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_KVDB_GetCFName_ustore_b40e736282a5577d(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (arg1 SwigcptrKVDB) InitGlobalState() (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1
	swig_r = (Status)(SwigcptrStatus(C._wrap_KVDB_InitGlobalState_ustore_b40e736282a5577d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrKVDB) Commit() (_swig_ret PairStatusString) {
	var swig_r PairStatusString
	_swig_i_0 := arg1
	swig_r = (PairStatusString)(SwigcptrPairStatusString(C._wrap_KVDB_Commit_ustore_b40e736282a5577d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrKVDB) GetState(arg2 string) (_swig_ret PairStatusString) {
	var swig_r PairStatusString
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (PairStatusString)(SwigcptrPairStatusString(C._wrap_KVDB_GetState_ustore_b40e736282a5577d(C.uintptr_t(_swig_i_0), *(*C.swig_type_48)(unsafe.Pointer(&_swig_i_1)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func (arg1 SwigcptrKVDB) PutState(arg2 string, arg3 string, arg4 string, arg5 VecStr) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5.Swigcptr()
	swig_r = (bool)(C._wrap_KVDB_PutState_ustore_b40e736282a5577d(C.uintptr_t(_swig_i_0), *(*C.swig_type_49)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_50)(unsafe.Pointer(&_swig_i_2)), *(*C.swig_type_51)(unsafe.Pointer(&_swig_i_3)), C.uintptr_t(_swig_i_4)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg4
	}
	return swig_r
}

func (arg1 SwigcptrKVDB) GetBlock(arg2 string, arg3 string) (_swig_ret PairStatusString) {
	var swig_r PairStatusString
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (PairStatusString)(SwigcptrPairStatusString(C._wrap_KVDB_GetBlock_ustore_b40e736282a5577d(C.uintptr_t(_swig_i_0), *(*C.swig_type_52)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_53)(unsafe.Pointer(&_swig_i_2)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	return swig_r
}

func (arg1 SwigcptrKVDB) PutBlock(arg2 string, arg3 string) (_swig_ret PairStatusString) {
	var swig_r PairStatusString
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (PairStatusString)(SwigcptrPairStatusString(C._wrap_KVDB_PutBlock_ustore_b40e736282a5577d(C.uintptr_t(_swig_i_0), *(*C.swig_type_54)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_55)(unsafe.Pointer(&_swig_i_2)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	return swig_r
}

func (arg1 SwigcptrKVDB) GetHistoricalState__SWIG_0(arg2 string, arg3 uint64) (_swig_ret PairStatusString) {
	var swig_r PairStatusString
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (PairStatusString)(SwigcptrPairStatusString(C._wrap_KVDB_GetHistoricalState__SWIG_0_ustore_b40e736282a5577d(C.uintptr_t(_swig_i_0), *(*C.swig_type_56)(unsafe.Pointer(&_swig_i_1)), C.swig_type_57(_swig_i_2))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func (arg1 SwigcptrKVDB) GetHistoricalState__SWIG_1(arg2 string, arg3 string) (_swig_ret PairStatusString) {
	var swig_r PairStatusString
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (PairStatusString)(SwigcptrPairStatusString(C._wrap_KVDB_GetHistoricalState__SWIG_1_ustore_b40e736282a5577d(C.uintptr_t(_swig_i_0), *(*C.swig_type_58)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_59)(unsafe.Pointer(&_swig_i_2)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	return swig_r
}

func (p SwigcptrKVDB) GetHistoricalState(a ...interface{}) PairStatusString {
	argc := len(a)
	if argc == 2 {
		if _, ok := a[1].(string); !ok {
			goto check_1
		}
		return p.GetHistoricalState__SWIG_1(a[0].(string), a[1].(string))
	}
check_1:
	if argc == 2 {
		return p.GetHistoricalState__SWIG_0(a[0].(string), a[1].(uint64))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrKVDB) GetTxnID__SWIG_0(arg2 string, arg3 uint64) (_swig_ret PairStatusString) {
	var swig_r PairStatusString
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (PairStatusString)(SwigcptrPairStatusString(C._wrap_KVDB_GetTxnID__SWIG_0_ustore_b40e736282a5577d(C.uintptr_t(_swig_i_0), *(*C.swig_type_60)(unsafe.Pointer(&_swig_i_1)), C.swig_type_61(_swig_i_2))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func (arg1 SwigcptrKVDB) GetTxnID__SWIG_1(arg2 string, arg3 string) (_swig_ret PairStatusString) {
	var swig_r PairStatusString
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (PairStatusString)(SwigcptrPairStatusString(C._wrap_KVDB_GetTxnID__SWIG_1_ustore_b40e736282a5577d(C.uintptr_t(_swig_i_0), *(*C.swig_type_62)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_63)(unsafe.Pointer(&_swig_i_2)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	return swig_r
}

func (p SwigcptrKVDB) GetTxnID(a ...interface{}) PairStatusString {
	argc := len(a)
	if argc == 2 {
		if _, ok := a[1].(string); !ok {
			goto check_1
		}
		return p.GetTxnID__SWIG_1(a[0].(string), a[1].(string))
	}
check_1:
	if argc == 2 {
		return p.GetTxnID__SWIG_0(a[0].(string), a[1].(uint64))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrKVDB) GetDeps__SWIG_0(arg2 string, arg3 uint64) (_swig_ret PairStatusVectorPairStr) {
	var swig_r PairStatusVectorPairStr
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (PairStatusVectorPairStr)(SwigcptrPairStatusVectorPairStr(C._wrap_KVDB_GetDeps__SWIG_0_ustore_b40e736282a5577d(C.uintptr_t(_swig_i_0), *(*C.swig_type_64)(unsafe.Pointer(&_swig_i_1)), C.swig_type_65(_swig_i_2))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func (arg1 SwigcptrKVDB) GetDeps__SWIG_1(arg2 string, arg3 string) (_swig_ret PairStatusVectorPairStr) {
	var swig_r PairStatusVectorPairStr
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (PairStatusVectorPairStr)(SwigcptrPairStatusVectorPairStr(C._wrap_KVDB_GetDeps__SWIG_1_ustore_b40e736282a5577d(C.uintptr_t(_swig_i_0), *(*C.swig_type_66)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_67)(unsafe.Pointer(&_swig_i_2)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	return swig_r
}

func (p SwigcptrKVDB) GetDeps(a ...interface{}) PairStatusVectorPairStr {
	argc := len(a)
	if argc == 2 {
		if _, ok := a[1].(string); !ok {
			goto check_1
		}
		return p.GetDeps__SWIG_1(a[0].(string), a[1].(string))
	}
check_1:
	if argc == 2 {
		return p.GetDeps__SWIG_0(a[0].(string), a[1].(uint64))
	}
	panic("No match for overloaded function call")
}

func DeleteKVDB(arg1 KVDB) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_KVDB_ustore_b40e736282a5577d(C.uintptr_t(_swig_i_0))
}

type KVDB interface {
	Swigcptr() uintptr
	SwigIsKVDB()
	Get(arg2 string) (_swig_ret PairStatusString)
	Put(arg2 string, arg3 string) (_swig_ret Status)
	Delete(arg2 string) (_swig_ret Status)
	Write(arg2 WriteBatch) (_swig_ret Status)
	Exist(arg2 string) (_swig_ret bool)
	NewIterator() (_swig_ret Iterator)
	GetSize() (_swig_ret int64)
	GetCFName() (_swig_ret string)
	InitGlobalState() (_swig_ret Status)
	Commit() (_swig_ret PairStatusString)
	GetState(arg2 string) (_swig_ret PairStatusString)
	PutState(arg2 string, arg3 string, arg4 string, arg5 VecStr) (_swig_ret bool)
	GetBlock(arg2 string, arg3 string) (_swig_ret PairStatusString)
	PutBlock(arg2 string, arg3 string) (_swig_ret PairStatusString)
	GetHistoricalState(a ...interface{}) PairStatusString
	GetTxnID(a ...interface{}) PairStatusString
	GetDeps(a ...interface{}) PairStatusVectorPairStr
}

type SwigcptrIterator uintptr

func (p SwigcptrIterator) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrIterator) SwigIsIterator() {
}

func DeleteIterator(arg1 Iterator) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_Iterator_ustore_b40e736282a5577d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrIterator) GetTime() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_Iterator_GetTime_ustore_b40e736282a5577d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrIterator) Release() {
	_swig_i_0 := arg1
	C._wrap_Iterator_Release_ustore_b40e736282a5577d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrIterator) SetRange(arg2 string, arg3 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_Iterator_SetRange_ustore_b40e736282a5577d(C.uintptr_t(_swig_i_0), *(*C.swig_type_68)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_69)(unsafe.Pointer(&_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
}

func (arg1 SwigcptrIterator) Valid() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_Iterator_Valid_ustore_b40e736282a5577d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrIterator) SeekToFirst() {
	_swig_i_0 := arg1
	C._wrap_Iterator_SeekToFirst_ustore_b40e736282a5577d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrIterator) SeekToLast() {
	_swig_i_0 := arg1
	C._wrap_Iterator_SeekToLast_ustore_b40e736282a5577d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrIterator) Seek(arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Iterator_Seek_ustore_b40e736282a5577d(C.uintptr_t(_swig_i_0), *(*C.swig_type_70)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrIterator) Next() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_Iterator_Next_ustore_b40e736282a5577d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrIterator) Prev() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_Iterator_Prev_ustore_b40e736282a5577d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrIterator) Key() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_Iterator_key_ustore_b40e736282a5577d(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (arg1 SwigcptrIterator) Value() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_Iterator_value_ustore_b40e736282a5577d(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

type Iterator interface {
	Swigcptr() uintptr
	SwigIsIterator()
	GetTime() (_swig_ret int)
	Release()
	SetRange(arg2 string, arg3 string)
	Valid() (_swig_ret bool)
	SeekToFirst()
	SeekToLast()
	Seek(arg2 string)
	Next() (_swig_ret bool)
	Prev() (_swig_ret bool)
	Key() (_swig_ret string)
	Value() (_swig_ret string)
}

func NewEmptyIterator() (_swig_ret Iterator) {
	var swig_r Iterator
	swig_r = (Iterator)(SwigcptrIterator(C._wrap_NewEmptyIterator_ustore_b40e736282a5577d()))
	return swig_r
}


